@model IEnumerable<MVC.Models.Tablero>


@{
    var tableros = ViewBag.Tableros as List<MVC.Models.Tablero>;
    var tareas = ViewBag.Tareas as List<MVC.Models.Tarea>;
    ViewData["Title"] = "Index";
}


<div class="d-flex gap-3">
    <h1>Mis Tableros</h1>
    <span><a asp-action="Create" class="text-decoration-none fs-1"> + </a></span>

</div>


<div class="tablero-container">
    @foreach (var tablero in tableros)
    {
        <div class="tablero" style="background-color:@tablero.Color;">
            <div class="tablero-content">
                <div class="dropdownMenu">
                    <button class="dropdownButton fs-2">...</button>
                    <div class="dropdownContent">
                        <a class="dropdown-item" asp-controller="Tableros" asp-route-id="@tablero.Id" asp-action="Edit">Editar</a>
                        <a class="dropdown-item" asp-controller="Tableros" asp-route-id="@tablero.Id" asp-action="Delete">Eliminar</a>
                    </div>
                </div>

                <h3>@tablero.Titulo</h3>
                <p>@tablero.Subtitulo</p>
                <ul class="tarea-list ">
                    @foreach (var t in tareas.Where(t => t.tableroId == tablero.Id).OrderBy(t => t.Completa))
                    {
                        var diasRestantes = (t.FechaLimite - DateTime.Now).Days;
                        <div>
                        <li class="d-flex shadow justify-content-between list-group-item list-group-item-action @(t.Completa ? "completa" : "incompleta")">
                                <div>
                                    <input type="checkbox" data-tarea-id="@t.Id" @(t.Completa ? "checked" : "") />
                                    <span id="tarea-@t.Id" data-completa="@t.Completa.ToString().ToLower()" style="text-decoration: @(t.Completa ? "line-through" : "none")">@t.Nombre</span>
                                </div>
                                <div>
                                    @if(!t.Completa){
                                        <span class="dias")>
                                            (@(diasRestantes >= 0 ? $"{diasRestantes} días restantes" : $"{Math.Abs(diasRestantes)} días atrasada"))
                                        </span>
                                    }
                                    <a asp-controller="Tareas" asp-action="Edit" asp-route-id="@t.Id" asp-route-tableroId="@tablero.Id" class="text-decoration-none fs-6">⚙</a>
                                    <a asp-controller="Tareas" asp-action="Delete" asp-route-id="@t.Id" class="text-decoration-none fs-6">X</a>
                                </div>
                            </li>
                        </div>
                    }
                </ul>
                <a asp-controller="Tareas" asp-action="Create" asp-route-tableroId="@tablero.Id" class="text-decoration-none fs-6"> + Nueva tarea </a>
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const checkboxes = document.querySelectorAll('.tarea-list input[type="checkbox"]');

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', async function () {
                const tareaId = this.dataset.tareaId;

                try {
                    const response = await fetch(`/Tareas/CambiarEstado/${tareaId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Error al cambiar el estado de la tarea.');
                    }

                    const spanElement = document.getElementById(`tarea-${tareaId}`);
                    if (spanElement) {
                        const isCompleta = this.checked;
                        spanElement.setAttribute('data-completa', String(isCompleta));
                        spanElement.style.textDecoration = isCompleta ? "line-through" : "none";

                        const listItem = spanElement.closest('li');
                        if (listItem) {
                            listItem.classList.toggle('completa', isCompleta);
                            listItem.classList.toggle('incompleta', !isCompleta);
                        }
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });
        });
    });
</script>

<style>
    .tablero-container {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
        height: 700px;
        padding: 20px;
    }

    .tablero {
        flex: 0 0 auto;
        width: 300px;
        margin-right: 10px;
        min-height: 400px; 
        max-height: 500px;
        overflow-y: auto;
        border: 1px solid #ddd;
        padding: 10px;
        transition: box-shadow 0.3s ease, transform 0.3s ease, background-color 0.3s ease;
        border-radius: 15px;
    }

        .tablero:last-child {
            margin-right: 0;
        }

    .tablero-content {
        margin-bottom: 10px;
        position: relative;
    }

    .tablero:hover {
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
        transform: translateY(-2px);
    }

    .tarea-list {
        list-style-type: none;
        padding: 0;
    }

        .tarea-list li {
            margin: 2px;
        }

    .dropdownMenu {
        font-weight:300;
        position: absolute;
        top: -20px;
        right: 1px;
    }

    .dropdownButton {
        background: none;
        border: none;
        font-size: 20px;
        cursor: pointer;
    }

    .dropdownContent {
        display: none;
        position: absolute;
        right: 0;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdownContent a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .dropdownContent a:hover {
                background-color: #f1f1f1;
            }

    .dropdownMenu:hover .dropdownContent {
        display: block;
    }

    .completa {
        background-color: #C1C1C1;
    }
    .incompleta {
        background-color: white;
    }

    .dias{
        font-size: 0.6em;
    }

    .restantes {
        color: gray;
    }

    .atrasada {
        color: red;
    }
</style>
